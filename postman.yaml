trigger:
  - main

pool:
  vmImage: 'windows-latest'

steps:
  - script: |
      npm install -g newman newman-reporter-htmlextra
    displayName: 'Install Newman and Html reporter'

  - script: |
      echo "Creating reports directory..."
      mkdir "$(Build.ArtifactStagingDirectory)\reports" || (echo "Failed to create directory" && exit /b 1)
      echo "Directory created successfully."
      echo "Running Newman tests..."
      newman run Test_fire.postman_collection.json --environment Brocaly.postman_environment.json -r htmlextra --reporter-htmlextra-export "$(Build.ArtifactStagingDirectory)\reports\report.html" || (echo "Newman tests failed" && exit /b 1)
      echo "Newman tests completed successfully."
    displayName: 'Run API Test and Create Reports Directory'



  - task: PublishPipelineArtifact@1
    displayName: 'Publish HTML Report'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)\reports'
      artifact: 'Report'

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # SMTP configuration for Gmail
        $smtpServer = "smtp.gmail.com"
        $smtpPort = 587
        $from = "susmit.s.surwade@gmail.com"
        #$to = @("lokesh.singh@blenheimchalcot.com","susmit.surwade@blenheimchalcot.com","satyendra.kumar@blenheimchalcot.com","rinkesh.das@blenheimchalcot.com","ami.jambusaria@blenheimchalcot.com")
        $to = @("susmit.surwade@blenheimchalcot.com")
        # Get today's date
        $todayDate = Get-Date -Format "dd-MM-yyyy"
        
        # Set the email subject
        $subject = "Daily Report : Brocaly [Azure platform] Production API Automation report for $todayDate"
        
        # SMTP credentials
        $username = "susmit.s.surwade@gmail.com"
        $password = "qzod ltfm nmav tqvw"
        $organization = "susmitsurwade"
        $project = "SusmitDemo"
        
        # Email body
        $emailBody = "Please find the attached api's health report."
        
        # Path to the HTML report
        $attachmentPath = "$(Build.ArtifactStagingDirectory)\reports\report.html"
        
        # Send email with attached HTML report using TLS/SSL
        $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ($username, $securePassword)
        Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort -From $from -To $to -Subject $subject -Body $emailBody -Attachments $attachmentPath -Credential $credential -UseSsl
    displayName: 'Send Email with attached HTML report'